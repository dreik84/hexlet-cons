--- Реляционная модель данных ---

Логика работы в реляционных СУБД строится на реляционной алгебре. Поэтому в подобных системах добавляют приставку «реляционная». 

-- Способы представления данных --

Внешнее представление — это то, что видит пользователь. Оно влияет на способ взаимодействия с данными. Поэтому разные способы представления данных называются моделями.

Эти модели не отражают то, что происходит на физическом уровне. Они описывают, как данные структурированы, и как с ними взаимодействовать. Модели данных очень похожи на абстрактные типы данных, которые определяют интерфейс взаимодействия с типом и не определяют его внутреннюю реализацию.

Существует много разных способов представить одни и те же данные. В этом уроке мы разберем три самых популярных:

Иерархическая модель
Сетевая модель
Реляционная модель

-- Иерархическая модель --

В иерархической модели данные представлены в виде дерева, где дочерние элементы находятся в зависимости от родительских.

-- Сетевая модель --

Сетевая модель данных расширяет иерархическую и позволяет иметь множество предков. Сетевая модель — это граф, у которого много вершин и соединений между ними.

Недостаток сетевой модели данных — высокая сложность и жесткость схемы БД, которая построена на ее основе.

-- Реляционная модель --

Наибольшее распространение получила реляционная модель данных. На ее основе построены реляционные СУБД. В реляционной модели данные — это набор отношений. 

Реляционная модель — удачный выбор в большинстве ситуаций. У нее нет недостатков, которые есть у других моделей.
Чтобы взаимодействовать с данными, которые описаны реляционной моделью, используется реляционная алгебра. 

Данные, представленные в реляционной модели, нужно привести к нормальной форме — это требования, которым должно удовлетворять отношение для минимизации избыточности данных, потенциально приводящих к логическим ошибкам.

--- Первая нормальная форма ---

Всего существует шесть нормальных форм, которые включают определенные требования. С каждым следующим уровнем требования все жестче, так как включают в себя предыдущие уровни.

Первая нормальная форма сводится к трем правилам:

- Каждая ячейка таблицы может хранить только одно значение
- Все данные в одной колонке могут быть только одного типа
- Каждая запись в таблице должна однозначно отличаться от других записей

Первичный ключ (PRIMARY KEY) — поле или набор полей, которые содержат уникальное значение для каждой записи. Первичный ключ не может меняться, его значение однозначно определяет любую запись в таблице.

Разберем два вида первичного ключа:

- Естественный — когда используются значения из окружающего мира, например, email, ФИО или паспортные данные. Такие первичные ключи используют редко из-за их ненадежности. Часто они не уникальны и могут изменяться или повторяться.
- Суррогатный — когда используются автоматически генерируемые уникальные значения. Такой ключ поддерживается любой базой данных «из коробки». Иногда это просто числа, а иногда — сложные число-буквенные строки или хеши.

























































