--- Реляционные базы данных ---

Для удобной работы с данными существуют специальные программы — они называются СУБД (системы управления базами данных).

-- Сложность СУБД --

Программы Postgresql, Mysql, Oracle, SQL Server являются СУБД — Системой Управления Базами Данных. СУБД не то же самое, что и база данных (БД). 
БД — это хранилище данных, у которых определенная внутренняя структура. Но кто-то должен ее обслуживать: создавать, обновлять, записывать в нее данные, выбирать их. 
Именно этим и занимается СУБД — специальная программа, которую необходимо установить на ту машину, где планируется размещать базу данных.
СУБД — невероятно сложные программы, к которым предъявляются практически максимальные требования по надежности, скорости работы и эффективности. 

-- Как устроены СУБД --

СУБД реализуется как клиент-серверное приложение:
- Сервером выступает сама СУБД — она управляет файлами баз данных, принимает запросы от клиентов и выполняет их команды.
- Клиентом считается любое приложение, желающее взаимодействовать с базой данных.

Сервер в такой архитектуре спроектирован так, что он может работать с большим количеством одновременных подключений от разных клиентов. 
Как правило, база данных используется большим количеством пользователей одновременно.

--- Структура баз данных ---

Таблицы состоят из строк (записей) и столбцов (полей), для которых заданы типы данных. Каждая строка отражает информацию об одном объекте.

-- Таблицы в базах данных --

Чтобы всем было удобно работать с такими объемами данных, к таблицам предъявляются конкретные требования:
- Название таблицы. Оно должно быть уникально в рамках одной базы данных. Название таблицы мы задаем при создании, но его можно изменить при необходимости
- Столбцы или поля. У каждого поля уникальное имя в рамках одной таблицы
- Тип данных столбца. Он ограничивает набор допустимых значений, которые можно присвоить столбцу. Например, в столбец числового типа нельзя записать текстовые строки.
- Строки или записи. Их количество в разных таблицах сильно отличается — от нескольких штук до миллиардов записей. В базах данных нет никаких гарантий относительно порядка строк в таблице.

Базы данных, в которых данные хранятся в виде таких таблиц, называются реляционными базами данных. Название "реляционные" происходит от слова "relation" (отношение) в математической теории множеств. В реляционных базах данных таблицы представляют собой отношения, где строки — это экземпляры данных, а столбцы — свойства (атрибуты) этих данных. Работать с ними можно с помощью реляционных СУБД.

-- Структура таблиц --

Каждая таблица должна иметь определенную структуру. Эта структура определяет столбцы и включает в себя имена полей и их типы.

-- Как правильно именовать сущности --

Именование таблиц и полей зависит от программиста и определяется соглашениями конкретной группы разработчиков:
- Задаем все имена в нижнем регистре
- Для имен из нескольких слов используем snake_case (разделяем слова подчеркиванием _ без пробелов)
- Называем таблицы по хранимым сущностям во множественном числе (например, в таблице с именем users должна храниться информация о пользователях)

-- Как управлять данными --

Для управления данными и их структурой существует специальный инструмент — язык SQL. 
Это универсальный язык, позволяющий работать с разными СУБД. 

--- Язык SQL ---

SQL (Structured Query Language) — это язык, который помогает управлять данными в СУБД.

SQL — это декларативный язык программирования. Он описывает, что нужно получить, не объясняя, как именно нужно прийти к такому результату.

SQL позволяет:
- Управлять данными внутри таблицы — добавлять их, редактировать, выбирать.
- Менять структуру самих таблиц и баз данных.

Язык SQL разрабатывается независимо от СУБД и имеет собственный стандарт, который реализуют конкретные базы данных. Поэтому на базовом уровне все реляционные базы данных работают примерно одинаково.

-- Создание базы данных --

Чтобы начать работать с базой данных, ее нужно создать. Чтобы это сделать, нужно установить СУБД на специальный компьютер — сервер.

CREATE DATABASE hexlet_db;

-- Как создать таблицу --

CREATE TABLE users (
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(255),
    created_at TIMESTAMP
);

-- Как добавить запись --

INSERT INTO users
(first_name,  last_name, email, created_at)
VALUES ('Maureen', 'Romaguera',  'Casimer_Cronin@yahoo.com', '2022-06-14 02:28:26.058');

-- -- Как обновить запись --

UPDATE users SET email = 'Casimer_Cronin@gmail.com'
WHERE last_name = 'Romaguera';

-- Как удалить запись --

DELETE FROM users WHERE last_name = 'Romaguera';

-- Как выбрать запись --

SELECT * FROM users WHERE first_name = 'Ramiro';

-- Удаление таблиц --

DROP TABLE users;

-- Комментарии в запросах --

Комментарии в SQL позволяют вам добавлять пояснения и заметки к вашему запросу. При этом сами они не являются частью запроса, не влияют его выполнение и игнорируются интерпретатором.

В SQL существует два основных вида комментариев: однострочные и многострочные

-- однострочный комментарий

/*
многострочный
комметарий
*/

--- Подключение к БД с помощью psql ---

SQL - это структурированный язык запросов. 

Psql - это интерактивная консольная утилита, которая позволяет взаимодействовать с базой данных через командную строку. 
Клиент psql это стандартный способ для подключения к БД и его можно установить вместе с СУБД.

Для начала, чтобы подключиться к базе данных с помощью psql, необходимо выполнить команду:

psql -h server_address -U username -d dbname

Где server_address - адрес сервера СУБД, username - это ваше имя пользователя, а dbname - название базы данных, к которой вы хотите подключиться. После выполнения этой команды вам будет предложено ввести пароль.

psql -h 65.108.223.44 -d coursesdb -U student
Password for user student:
# вводим пароль student

После успешного подключения, вы увидите приглашение psql для ввода команд и название текущей базы данных. 

-- Работа с SQL --

coursesdb=> SELECT id, first_name, last_name FROM users ORDER BY first_name ASC LIMIT 5;

Чтобы запрос выполнился, нужно соблюсти два условия:
- В конце запроса должна быть точка с запятой ;
- В конце запроса необходимо нажать kbd:[Enter] для его отправки.

-- Клиент DBeaver --

DBeaver - бесплатный универсальный клиент для работы с различными СУБД. 
Он позволяют работать с базами данных через графический интерфейс и имеют те же возможности, что и psql.


















































